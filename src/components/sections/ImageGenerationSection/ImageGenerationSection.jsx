import React, { useState, forwardRef } from "react";
import "./ImageGenerationSection.css";
import { dalleImagePrompt } from "../../../prompts/openai/dalleImagePrompt";

const ImageGenerationSection = forwardRef(({ onImageGenerated, scrollToNextSection, formData }, ref) => {
  const [isGenerating, setIsGenerating] = useState(false);
  const [generatedPrompt, setGeneratedPrompt] = useState("");
  const [imageUrl, setImageUrl] = useState("");
  const [generatedImageUrl, setGeneratedImageUrl] = useState("");
  const [currentStep, setCurrentStep] = useState("");
  const [error, setError] = useState("");
  const [makeComStatus, setMakeComStatus] = useState("");

  const generateImage = async () => {
    setIsGenerating(true);
    setError("");
    setGeneratedPrompt("");
    setImageUrl("");
    setGeneratedImageUrl("");
    setCurrentStep("");
    setMakeComStatus("");
    
    try {
      console.log('FormData –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', formData);
      
      let photoUrl = "";
      
      // –ö—Ä–æ–∫ 1: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ –Ω–∞ Cloudinary (—è–∫—â–æ —î —Ñ–æ—Ç–æ)
      if (formData.photo) {
        setCurrentStep("–ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Ñ–æ—Ç–æ –Ω–∞ Cloudinary...");
        
        // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –≤ base64
        const convertToBase64 = (file) => {
          return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = (error) => reject(error);
          });
        };

        const photoBase64 = await convertToBase64(formData.photo);
        
        const uploadResponse = await fetch('http://localhost:5000/api/upload-photo', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            photoBase64: photoBase64 
          }),
        });

        if (!uploadResponse.ok) {
          throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ñ–æ—Ç–æ');
        }

        const uploadData = await uploadResponse.json();
        photoUrl = uploadData.url;
        setImageUrl(photoUrl);
        
        console.log('–§–æ—Ç–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –Ω–∞ Cloudinary:', photoUrl);
      }
      
      // –ö—Ä–æ–∫ 2: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø—Ä–æ–º–ø—Ç–∞ –∑ URL —Ñ–æ—Ç–æ
      setCurrentStep("–ì–µ–Ω–µ—Ä—É—é –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...");
      
      const formDataWithUrl = {
        ...formData,
        photoUrl: photoUrl
      };
      
      const prompt = dalleImagePrompt(formDataWithUrl);
      console.log('–ü—Ä–æ–º–ø—Ç –¥–ª—è DALL-E:', prompt);
      
      const response = await fetch('http://localhost:5000/api/generate-image-promt', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ prompt }),
      });

      if (!response.ok) {
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç–∞');
      }

      const data = await response.json();
      
      if (data.generatedPrompt) {
        setGeneratedPrompt(data.generatedPrompt);
        
        // –ö—Ä–æ–∫ 3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com webhook
        if (photoUrl) {
          setCurrentStep("–ì–µ–Ω–µ—Ä—É—é —Ñ—ñ–Ω–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è...");
          setMakeComStatus("–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Make.com...");
          
          try {
            console.log('–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∑–∞–ø–∏—Ç –¥–æ Make.com webhook...');
            
            // –°–ø—Ä–æ–±—É—î–º–æ FormData —Ñ–æ—Ä–º–∞—Ç
            const formData = new FormData();
            formData.append('prompt', data.generatedPrompt);
            formData.append('imageUrl', photoUrl);
            formData.append('style', formDataWithUrl.cardStyle);
            formData.append('mood', formDataWithUrl.cardMood);
            formData.append('hobby', formDataWithUrl.hobby);
            formData.append('trait', formDataWithUrl.trait);
            formData.append('greeting', formDataWithUrl.greetingText);
            
            console.log('–î–∞–Ω—ñ –¥–ª—è Make.com (FormData):', {
              prompt: data.generatedPrompt,
              imageUrl: photoUrl,
              style: formDataWithUrl.cardStyle,
              mood: formDataWithUrl.cardMood,
              hobby: formDataWithUrl.hobby,
              trait: formDataWithUrl.trait,
              greeting: formDataWithUrl.greetingText
            });
            
            const imageGenerationResponse = await fetch('https://hook.eu2.make.com/o8eoc69ifeo4ne9pophf1io4q30wm23c', {
              method: 'POST',
              body: formData, // –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —è–∫ FormData
            });

            console.log('–°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Make.com:', imageGenerationResponse.status);
            console.log('Headers –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', imageGenerationResponse.headers);

            if (imageGenerationResponse.ok) {
              const responseText = await imageGenerationResponse.text();
              console.log('–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Make.com (text):', responseText);
              
              // –Ø–∫—â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å - —Ü–µ –ø—Ä–æ—Å—Ç–æ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
              if (responseText && (responseText.startsWith('http') || responseText.startsWith('"http'))) {
                const generatedImageUrl = responseText.trim().replace(/"/g, ''); // –≤–∏–¥–∞–ª—è—î–º–æ –ª–∞–ø–∫–∏ —è–∫—â–æ —î
                setGeneratedImageUrl(generatedImageUrl);
                setMakeComStatus("‚úÖ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!");
                
                if (onImageGenerated) {
                  onImageGenerated("finalGeneratedImageUrl", generatedImageUrl);
                }
              } else {
                // –°–ø—Ä–æ–±—É—î–º–æ –ø–∞—Ä—Å–∏—Ç–∏ —è–∫ JSON
                try {
                  const imageData = JSON.parse(responseText);
                  console.log('–î–∞–Ω—ñ –≤—ñ–¥ Make.com (JSON):', imageData);
                  
                  if (imageData.generatedImageUrl) {
                    setGeneratedImageUrl(imageData.generatedImageUrl);
                    setMakeComStatus("‚úÖ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!");
                    
                    if (onImageGenerated) {
                      onImageGenerated("finalGeneratedImageUrl", imageData.generatedImageUrl);
                    }
                  } else {
                    console.warn('Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –¥–∞–Ω—ñ –±–µ–∑ generatedImageUrl:', imageData);
                    setMakeComStatus("‚ö†Ô∏è Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±–µ–∑ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è");
                  }
                } catch (parseError) {
                  console.warn('–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–∞—Ä—Å–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å Make.com —è–∫ JSON:', parseError);
                  setMakeComStatus("‚ö†Ô∏è Make.com –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ—á–∏—Ç–∞–±–µ–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å");
                }
              }
            } else {
              const errorText = await imageGenerationResponse.text();
              console.error('–ü–æ–º–∏–ª–∫–∞ Make.com response:', {
                status: imageGenerationResponse.status,
                statusText: imageGenerationResponse.statusText,
                body: errorText
              });
              setMakeComStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ Make.com: ${imageGenerationResponse.status} ${imageGenerationResponse.statusText}`);
              console.warn('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ—ñ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Make.com');
            }
          } catch (makeError) {
            console.error('–ü–æ–º–∏–ª–∫–∞ Make.com webhook:', makeError);
            console.error('–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', {
              name: makeError.name,
              message: makeError.message,
              stack: makeError.stack
            });
            setMakeComStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Make.com: ${makeError.message}`);
            // –ù–µ –∑—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ—Ü–µ—Å, —è–∫—â–æ Make.com –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
          }
        }
        
        setCurrentStep("–ì–æ—Ç–æ–≤–æ!");
        
        if (onImageGenerated) {
          onImageGenerated("generatedImagePrompt", data.generatedPrompt);
          if (photoUrl) {
            onImageGenerated("imageUrl", photoUrl);
          }
        }
        
        // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
        if (scrollToNextSection) {
          setTimeout(() => scrollToNextSection(), 1000);
        }
      }
      
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:', error);
      setError('–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      setCurrentStep("");
    } finally {
      setIsGenerating(false);
    }
  };

  const isFormComplete = () => {
    return formData.cardStyle && 
           formData.cardMood && 
           formData.greetingText && 
           (formData.hobby || formData.trait);
  };

  return (
    <section ref={ref} className="image-generation-section">
      <h2>–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è</h2>
      <p className="description">
        –ù–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –º–∏ —Å—Ç–≤–æ—Ä–∏–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
      </p>

      <div className="generation-container">
        <div className="form-summary">
          <h4>üìã –î–∞–Ω—ñ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó:</h4>
          <div className="summary-grid">
            <div className="summary-item">
              <span className="label">–°—Ç–∏–ª—å:</span>
              <span className="value">{formData.cardStyle || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
            </div>
            <div className="summary-item">
              <span className="label">–ù–∞—Å—Ç—Ä—ñ–π:</span>
              <span className="value">{formData.cardMood || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
            </div>
            <div className="summary-item">
              <span className="label">–ê—Ç—Ä–∏–±—É—Ç–∏:</span>
              <span className="value">{formData.hobby || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
            </div>
            <div className="summary-item">
              <span className="label">–†–∏—Å–∏:</span>
              <span className="value">{formData.trait || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
            </div>
            <div className="summary-item">
              <span className="label">–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è:</span>
              <span className="value">{formData.greetingText ? `${formData.greetingText.substring(0, 50)}...` : "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}</span>
            </div>
          </div>
        </div>

        <button 
          onClick={generateImage}
          disabled={isGenerating || !isFormComplete()}
          className={`generate-image-button ${!isFormComplete() ? 'disabled' : ''}`}
        >
          {isGenerating ? (
            <>
              <span className="loading-spinner"></span>
              {currentStep || "–ì–µ–Ω–µ—Ä—É—é..."}
            </>
          ) : (
            'üé® –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è'
          )}
        </button>

        {!isFormComplete() && (
          <div className="warning-message">
            <p>‚ö†Ô∏è –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –≤—Å—ñ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Å–µ–∫—Ü—ñ—ó</p>
          </div>
        )}

        {error && (
          <div className="error-message">
            <p>{error}</p>
          </div>
        )}

        {makeComStatus && (
          <div className="make-com-status">
            <p>{makeComStatus}</p>
          </div>
        )}

        {(generatedPrompt || imageUrl || generatedImageUrl) && (
          <div className="generated-result">
            <h4>‚úÖ –î–∞–Ω—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ª–∏—Å—Ç—ñ–≤–∫–∏ –≥–æ—Ç–æ–≤—ñ!</h4>
            
            {imageUrl && (
              <div className="image-result">
                <p><strong>üì∏ URL –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ–≥–æ —Ñ–æ—Ç–æ:</strong></p>
                <div className="url-display">
                  <a href={imageUrl} target="_blank" rel="noopener noreferrer" className="image-link">
                    {imageUrl}
                  </a>
                </div>
                <div className="image-preview">
                  <img src={imageUrl} alt="–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–µ —Ñ–æ—Ç–æ" className="preview-image" />
                </div>
              </div>
            )}
            
            {generatedPrompt && (
              <div className="prompt-display">
                <p><strong>üé® –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–ø—Ç:</strong></p>
                <div className="prompt-text">
                  {generatedPrompt}
                </div>
              </div>
            )}
            
            {generatedImageUrl && (
              <div className="final-image-result">
                <p><strong>üñºÔ∏è –§—ñ–Ω–∞–ª—å–Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:</strong></p>
                <div className="url-display">
                  <a href={generatedImageUrl} target="_blank" rel="noopener noreferrer" className="image-link">
                    {generatedImageUrl}
                  </a>
                </div>
                <div className="image-preview">
                  <img src={generatedImageUrl} alt="–ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è" className="preview-image" />
                </div>
              </div>
            )}
            
            <div className="next-steps">
              <p>üí° –¢–µ–ø–µ—Ä —É –≤–∞—Å —î –≤—Å—ñ –¥–∞–Ω—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ—ó –ª–∏—Å—Ç—ñ–≤–∫–∏!</p>
              {imageUrl && generatedPrompt && (
                <p>üéâ URL —Ñ–æ—Ç–æ —Ç–∞ –ø—Ä–æ–º–ø—Ç –≥–æ—Ç–æ–≤—ñ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —É–Ω—ñ–∫–∞–ª—å–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è!</p>
              )}
              {generatedImageUrl && (
                <p>üåü –§—ñ–Ω–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ!</p>
              )}
            </div>
          </div>
        )}
      </div>
    </section>
  );
});

export default ImageGenerationSection;
